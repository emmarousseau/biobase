name: "rsem_calculate_expression"
namespace: "rsem"
description: | 
  Calculate expression with RSEM.
keywords: ["Transcriptome", "Index"]
links:
  homepage: https://deweylab.github.io/RSEM/
  documentation: https://deweylab.github.io/RSEM/rsem-calculate-expression.html
  repository: https://github.com/deweylab/RSEM
references: 
  doi: https://doi.org/10.1186/1471-2105-12-323
license: GPL-3.0
  

argument_groups:
- name: "Input"
  arguments:
  - name: "--id"
    type: string
    description: Sample ID.
  - name: "--strandedness"
    type: string
    description: Sample strand-specificity. Must be one of unstranded, forward, reverse
    choices: [forward, reverse, unstranded]
  - name: "--paired"
    type: boolean
    description: Paired-end reads or not?
  - name: "--input"
    type: file
    description: Input reads for quantification.
    multiple: true
  - name: "--index"
    type: file
    must_exist: false
    description: RSEM index.  
  - name: "--extra_args"
    type: string
    description: Extra rsem-calculate-expression arguments in addition to the examples.

- name: "Output"
  arguments:
  - name: "--counts_gene"
    type: file
    description: Expression counts on gene level
    example: $id.genes.results
    direction: output
  - name: "--counts_transcripts"
    type: file
    description: Expression counts on transcript level
    example: $id.isoforms.results
    direction: output
  - name: "--stat"
    type: file
    description: RSEM statistics
    example: $id.stat
    direction: output
  - name: "--logs"
    type: file
    description: RSEM logs
    example: $id.log
    direction: output
  - name: "--bam_star"
    type: file
    description: BAM file generated by STAR (optional)
    example: $id.STAR.genome.bam
    direction: output
  - name: "--bam_genome"
    type: file
    description: Genome BAM file (optional)
    example: $id.genome.bam
    direction: output
  - name: "--bam_transcript"
    type: file
    description: Transcript BAM file (optional)
    example: $id.transcript.bam
    direction: output

resources:
  - type: bash_script
    path: script.sh

test_resources:
  - type: bash_script
    path: test.sh
  - path: test_data
 
engines:
  - type: docker
    image: ubuntu:22.04
    setup:
    - type: apt
      packages: 
        - build-essential 
        - gcc 
        - g++ 
        - make 
        - wget 
        - zlib1g-dev 
        - unzip 
        - xxd 
        - perl 
        - r-base
        - bowtie2
        - python3-pip 
        - git
    - type: docker
      env: 
        - STAR_VERSION=2.7.11b
        - RSEM_VERSION=1.3.3
        - TZ=Europe/Brussels
      run: |
        ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
        cd /tmp && \
        wget --no-check-certificate https://github.com/alexdobin/STAR/archive/refs/tags/${STAR_VERSION}.zip && \
        unzip ${STAR_VERSION}.zip && \
        cd STAR-${STAR_VERSION}/source && \
        make STARstatic CXXFLAGS_SIMD=-std=c++11 && \
        cp STAR /usr/local/bin && \
        cd /tmp && \
        wget --no-check-certificate https://github.com/deweylab/RSEM/archive/refs/tags/v${RSEM_VERSION}.zip && \
        unzip v${RSEM_VERSION}.zip && \
        cd RSEM-${RSEM_VERSION} && \
        make && \
        make install && \
        rm -rf /tmp/STAR-${STAR_VERSION} /tmp/${STAR_VERSION}.zip && \
        rm -rf /tmp/RSEM-${RSEM_VERSION} /tmp/v${RSEM_VERSION}.zip && \
        cd && \
        apt-get clean && \
        echo 'export PATH=$PATH:/usr/local/bin' >> /etc/profile && \
        echo 'export PATH=$PATH:/usr/local/bin' >> ~/.bashrc && \
        /bin/bash -c "source /etc/profile && source ~/.bashrc && echo $PATH && which STAR"

    - type: docker
      run: |
        echo "RSEM: `rsem-calculate-expression --version | sed -e 's/Current version: RSEM v//g'`" > /var/software_versions.txt && \
        echo "STAR: `STAR --version | sed -e 's/STAR_//g'`" >> /var/software_versions.txt >> /var/software_versions.txt

runners:
  - type: executable
  - type: nextflow